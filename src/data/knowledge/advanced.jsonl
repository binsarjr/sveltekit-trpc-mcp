{"question":"How do you implement middleware in tRPC?","answer":"Create middleware with `t.middleware()` to add reusable logic like logging, authentication, rate limiting, etc. Middleware can transform context, validate requests, or perform side effects. Chain middleware using `.use()` on procedures or routers for composable functionality."}
{"question":"How do you handle file uploads in tRPC SvelteKit?","answer":"For file uploads, use SvelteKit's native form handling or implement custom endpoints. tRPC procedures work with JSON, so for files, either use base64 encoding for small files or create separate SvelteKit endpoints for file upload, then reference the uploaded files in tRPC procedures."}
{"question":"How do you implement caching with tRPC in SvelteKit?","answer":"Implement caching at multiple levels: HTTP caching with appropriate headers, in-memory caching in procedures using libraries like node-cache, or database-level caching. Use SvelteKit's built-in caching mechanisms and consider CDN caching for public data."}
{"question":"How do you organize large tRPC routers?","answer":"Split large routers into smaller, feature-based routers and merge them using `t.mergeRouters()` or nest them with router composition. Organize by domain (users, posts, etc.) and create a main router that combines all sub-routers for better maintainability."}
{"question":"How do you implement real-time features with tRPC subscriptions?","answer":"Use tRPC subscriptions for real-time features like live chat, notifications, or data updates. Subscriptions require WebSocket support. Implement observable streams that emit data changes, and handle client-side subscription management for connecting and disconnecting from real-time streams."}
{"question":"How do you test tRPC procedures in SvelteKit?","answer":"Test tRPC procedures by creating test contexts and calling procedures directly. Use testing frameworks like Vitest with mock databases or services. Test both the procedure logic and integration with SvelteKit by testing load functions and API endpoints."}